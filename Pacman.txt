#include <iostream>
#include <windows.h>
#include <conio.h>
#include <time.h>
#include <thread>
#include <mutex>
using namespace std;
mutex mtx;

class enemy {
	char enwsd;
	int logic;
	int y;
	int x;
	int y1;
	int x1;
	int y2;
	int x2;
public:

	char go(int log, string* pol) {
		if (x < 0 || x>16)x = 7;
		if (y < 0 || y>13)y = 5;
		if (x1 < 0 || x1>16)x1 = 7;
		if (y1 < 0 || y1>13)y1 = 5;
		char pac = 7;

		while (1) {
			
			if (log == 0) {
				int a = rand() % 4;
				if (a == 0) { if (pol[y - 1][x] == '#' || y - 1 < 0)continue; enwsd = 'w'; }
				else if (a == 1) { if (pol[y + 1][x] == '#' || y + 1 > 9)continue; enwsd = 's'; }
				else if (a == 2) { if (pol[y][x - 1] == '#' || x - 1 < 0)continue; enwsd = 'a'; }
				else if (a == 3) { if (pol[y][x + 1] == '#' || x + 1 > 13)continue; enwsd = 'd'; }
				pac = 4;
				break;
			}
			if (log == 1) {
				if (x1 == 7 && y1 == 5) { enwsd = 's'; break; }
				if (x1 == 7 && y1 == 7) { enwsd = 's'; break; }
				if (x1 == 7 && y1 == 9) { enwsd = 'd'; break; }

				if (x1 == 13 && y1 == 9) { enwsd = 'w'; break; }
				if (x1 == 13 && y1 == 1) { enwsd = 'a'; break; }
				if (x1 == 11 && y1 == 9) { enwsd = 'd'; break; }
				if (x1 == 13 && y1 == 7) { enwsd = 'w'; break; }
				if (x1 == 13 && y1 == 3) { enwsd = 'w'; break; }
				if (x1 == 1 && y1 == 7) { enwsd = 's'; break; }
				if (x1 == 1 && y1 == 3) { enwsd = 's'; break; }

				if (x1 == 11 && y1 == 7) { enwsd = 'w'; break; }

				if (x1 == 7 && y1 == 1) { enwsd = 'a'; break; }
				if (x1 == 7 && y1 == 9) { enwsd = 'd'; break; }
				if (x1 == 3 && y1 == 1) { enwsd = 'a'; break; }
				if (x1 == 3 && y1 == 9) { enwsd = 'd'; break; }
				if (x1 == 1 && y1 == 1) { enwsd = 's'; break; }
				if (x1 == 1 && y1 == 9) { enwsd = 'd'; break; }
				if (x1 == 11 && y1 == 1) { enwsd = 'a'; break; }
			}

		}
		return enwsd;
	}
	int getx() {
		return x;
	}
	int gety() {
		return y;
	}
	int getx1() {
		return x1;
	}
	int gety1() {
		return y1;
	}
	void setx(int c) {
		x = c;
	}
	void sety(int c) {
		y = c;
	}
	void setx1(int c) {
		x1 = c;
	}
	void sety1(int c) {
		y1 = c;
	}
};
void setcur(int y, int x)//установка курсора на позицию  x y 
{
	COORD coord;
	coord.X = x;
	coord.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
};

void SetColor(int text, int bg) {
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hStdOut, (WORD)((bg << 4) | text));
}
HANDLE out = GetStdHandle(STD_OUTPUT_HANDLE);
void fontsize(int, int);
const int col = 4;
void ShowConsoleCursor(bool showFlag)
{
	HANDLE out = GetStdHandle(STD_OUTPUT_HANDLE);

	CONSOLE_CURSOR_INFO     cursorInfo;

	GetConsoleCursorInfo(out, &cursorInfo);
	cursorInfo.bVisible = showFlag; // set the cursor visibility
	SetConsoleCursorInfo(out, &cursorInfo);
}

int x2, y2;
void check(int xx, int yy) {
	if (x2 > 16 || x2 < 0)x2 = 3;
	if (y2 > 16 || y2 < 0)y2 = 9;
	if (x2 == xx && y2 == yy) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
}

void hod(string* pol) {
	enemy a1;
	int xx, yy;
	char enwsd;
	char en, tem[2] = { '.', '.' };
	while (1) {
		Sleep(15);
		for (int o = 0; o < 2; o++) {
			if (o == 0) {
				enwsd = a1.go(0, pol);
				xx = a1.getx();
				yy = a1.gety();
				en = 4;
			}
			if (o == 1) {
				enwsd = a1.go(1, pol);
				xx = a1.getx1();
				yy = a1.gety1();
				en = 5;
			}
		
			if (yy - 1 >= 0)if (enwsd == 'w') {
				if (yy == 1 && (xx == 3 || xx == 11)) {
					mtx.lock();
					pol[yy][xx] = ',';
					pol[yy - 1][xx] = en;
					setcur(yy, xx);
					SetColor(0, 0);
					cout << ',';
					setcur(yy - 1, xx);
					SetColor(col, 0);
					cout << en;
					yy--;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					yy = 10;
					pol[yy][xx] = en;
					setcur(yy, xx);
					SetColor(col, 0);
					cout << en;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					pol[yy][xx] = en;
					setcur(yy - 1, xx);
					SetColor(col, 0);
					cout << en;
					yy--;
					mtx.unlock();
					Sleep(143);
				}
				else {
					bool bo = 1;
					do {
						if (pol[yy - 1][xx] == '#')break;
						if (tem[o] != '.' && tem[o] != ',')tem[o] = '.';
						pol[yy][xx] = tem[o];
						mtx.lock();
						setcur(yy, xx);
						if (tem[o] == ',')SetColor(0, 0);
						else if (tem[o] == '.')SetColor(2, 0);
						cout << tem[o];
						tem[o] = pol[yy - 1][xx];
						pol[yy - 1][xx] = en;
						setcur(yy - 1, xx);
						SetColor(col, 0);
						cout << en;
						mtx.unlock();
						yy--;
						check(xx, yy);
						if (bo) {
							if (o == 1) {
								mtx.lock();
								setcur(a1.gety(), a1.getx());
								SetColor(col, 0);
								cout << char(4);
								mtx.unlock();
							}
							if (o == 0) {
								mtx.lock();
								setcur(a1.gety1(), a1.getx1());
								SetColor(col, 0);
								cout << char(5);
								mtx.unlock();
							}
							bo = 0;
						}
						Sleep(343);
					} while (pol[yy][xx - 1] == '#' && pol[yy][xx + 1] == '#');
				}
			}
			if (yy + 1 <= 11)if (enwsd == 's') {
				if (yy == 9 && (xx == 3 || xx == 11)) {
					mtx.lock();
					pol[yy][xx] = ',';
					pol[yy + 1][xx] = en;
					setcur(yy, xx);
					SetColor(0, 0);
					cout << ',';
					setcur(yy + 1, xx);
					SetColor(col, 0);
					cout << en;
					yy++;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					yy = 0;
					pol[yy][xx] = en;
					setcur(yy, xx);
					SetColor(col, 0);
					cout << en;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					pol[yy][xx] = en;
					setcur(yy + 1, xx);
					SetColor(col, 0);
					cout << en;
					yy++;
					mtx.unlock();
					Sleep(143);
				}
				else {
					bool bo = 1;
					do {
						if (pol[yy + 1][xx] == '#')break;
						if (tem[o] != '.' && tem[o] != ',')tem[o] = '.';
						pol[yy][xx] = tem[o];
						mtx.lock();
						setcur(yy, xx);
						if (tem[o] == ',')SetColor(0, 0);
						else if (tem[o] == '.')SetColor(2, 0);
						cout << tem[o];
						tem[o] = pol[yy + 1][xx];
						pol[yy + 1][xx] = en;
						setcur(yy + 1, xx);
						SetColor(col, 0);
						cout << en;
						mtx.unlock();
						yy++;
						check(xx, yy);
						if (bo) {
							if (o == 1) {
								mtx.lock();
								setcur(a1.gety(), a1.getx());
								SetColor(col, 0);
								cout << char(4);
								mtx.unlock();
							}
							if (o == 0) {
								mtx.lock();
								setcur(a1.gety1(), a1.getx1());
								SetColor(col, 0);
								cout << char(5);
								mtx.unlock();
							}
							bo = 0;
						}
						Sleep(343);
					} while (pol[yy][xx - 1] == '#' && pol[yy][xx + 1] == '#');
				}
			}
			if (xx - 1 >= 0)if (enwsd == 'a') {
				if (xx == 1 && (yy == 3 || yy == 7)) {
					mtx.lock();
					pol[yy][xx] = ',';
					pol[yy][xx - 1] = en;
					setcur(yy, xx);
					SetColor(0, 0);
					cout << ',';
					setcur(yy, xx - 1);
					SetColor(col, 0);
					cout << en;
					xx--;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					xx = 14;
					pol[yy][xx] = en;
					setcur(yy, xx);
					SetColor(col, 0);
					cout << en;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					pol[yy][xx] = en;
					setcur(yy, xx - 1);
					SetColor(col, 0);
					cout << en;
					xx--;
					mtx.unlock();
					Sleep(143);
				}
				else {
					bool bo = 1;
					do {
						if (pol[yy][xx - 1] == '#')break;
						if (tem[o] != '.' && tem[o] != ',')tem[o] = '.';
						pol[yy][xx] = tem[o];
						mtx.lock();
						setcur(yy, xx);
						if (tem[o] == ',')SetColor(0, 0);
						else if (tem[o] == '.')SetColor(2, 0);
						cout << tem[o];
						tem[o] = pol[yy][xx - 1];
						pol[yy][xx - 1] = en;
						setcur(yy, xx - 1);
						SetColor(col, 0);
						cout << en;
						mtx.unlock();
						xx--;
						check(xx, yy);
						if (bo) {
							if (o == 1) {
								mtx.lock();
								setcur(a1.gety(), a1.getx());
								SetColor(col, 0);
								cout << char(4);
								mtx.unlock();
							}
							if (o == 0) {
								mtx.lock();
								setcur(a1.gety1(), a1.getx1());
								SetColor(col, 0);
								cout << char(5);
								mtx.unlock();
							}
							bo = 0;
						}
						Sleep(343);
					} while (pol[yy-1][xx] == '#' && pol[yy+1][xx] == '#');
				}
			}
			if (xx + 1 <= 14)if (enwsd == 'd') {
				if (xx == 13 && (yy == 3 || yy == 7)) {
					mtx.lock();
					pol[yy][xx] = ',';
					pol[yy][xx + 1] = en;
					setcur(yy, xx);
					SetColor(0, 0);
					cout << ',';
					setcur(yy, xx + 1);
					SetColor(col, 0);
					cout << en;
					xx++;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					xx = 0;
					pol[yy][xx] = en;
					setcur(yy, xx);
					SetColor(col, 0);
					cout << en;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(yy, xx);
					pol[yy][xx] = ',';
					SetColor(0, 0);
					cout << ',';
					pol[yy][xx] = en;
					setcur(yy, xx + 1);
					SetColor(col, 0);
					cout << en;
					xx++;
					check(xx, yy);
					mtx.unlock();
					Sleep(143);
				}

				else {
					bool bo = 1;
					do {
						if (pol[yy][xx + 1] == '#')break;
						if (tem[o] != '.' && tem[o] != ',')tem[o] = '.';
						pol[yy][xx] = tem[o];
						mtx.lock();
						setcur(yy, xx);
						if (tem[o] == ',')SetColor(0, 0);
						else if (tem[o] == '.')SetColor(2, 0);
						cout << tem[o];
						tem[o] = pol[yy][xx + 1];
						pol[yy][xx + 1] = en;
						setcur(yy, xx + 1);
						SetColor(col, 0);
						cout << en;
						mtx.unlock();
						xx++;
						check(xx, yy);
						if (bo) {
							if (o == 1) {
								mtx.lock();
								setcur(a1.gety(), a1.getx());
								SetColor(col, 0);
								cout << char(4);
								mtx.unlock();
							}
							if (o == 0) {
								mtx.lock();
								setcur(a1.gety1(), a1.getx1());
								SetColor(col, 0);
								cout << char(5);
								mtx.unlock();
							}
							bo = 0;
						}
						Sleep(343);
					} while (pol[yy - 1][xx] == '#' && pol[yy + 1][xx] == '#');
				}
			}

			if (o == 0) {
				a1.setx(xx);
				a1.sety(yy);
			}
			if (o == 1) {
				a1.setx1(xx);
				a1.sety1(yy);
			}
			check(xx, yy);
		}
	}
}

int main() {
	srand(time(0));
	enemy a1, a2, a3, a4;
	SetConsoleTitle(L"Pacman");
	ShowConsoleCursor(false);
	fontsize(1, 50); srand(time(0));
	int a, b;
	string pol[13] = {
	{"###.#######.###"},
	{"#.............#"},
	{"#.#.###.###.#.#"},
	{"..#.#.....#.#.."},
	{"#.#.#.###.#.#.#"},
	{"#.#...#.#...#.#"},//y=5,x=7,центр
	{"#.#.#.#.#.#.#.#"},
	{"..#.#.....#.#.."},//
	{"#.#.###.###.#.#"},
	{"#.............#"},
	{"###.#######.###"},//h11xw15
	};
	int y = 9, x = 3, xe = 7, ye = 5;
	char  wsd = 0;
	bool r = 1;
	pol[y][x] = 2;
	for (int i = 0; i < 12; i++) {
		for (int j = 0; pol[i].size() > j; j++) {
			if (pol[i][j] == '.')SetColor(2, 0);
			else if (pol[i][j] == '#') { SetColor(3, 0); }
			else if (pol[i][j] == 2) { SetColor(6, 0); }
			else SetColor(0, 0);
			cout << pol[i][j];
		}cout << endl;
	}
	char pac = 2, en = 7;
	int xx = 7, yy = 5;
	int time = 0;
	thread th(hod, pol);
	th.detach();
	long long sat = 0;
	while (r) {

		sat++;
		if(sat>=3000){
			mtx.lock();
			setcur(y,x);
			SetColor(6, 0);
			cout << char(2);
			mtx.unlock();
			sat -= 3000;
		}
				//move
		if (_kbhit()) {
			wsd = _getch();
			r = 0;

			if (y - 1 >= 0)if (wsd == 'w') {
				if (y == 1 && (x == 3 || x == 11)) {
					mtx.lock();
					pol[y][x] = ',';
					if (pol[y-1][x] == 4 || pol[y-1][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y - 1][x] = pac;
					setcur(y, x);
					SetColor(0, 0);
					cout << ',';
					setcur(y - 1, x);
					SetColor(6, 0);
					cout << pac;
					y--;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					y = 10;
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y, x);
					SetColor(6, 0);
					cout << pac;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y - 1, x);
					SetColor(6, 0);
					cout << pac;
					y--;
					mtx.unlock();
					Sleep(143);
				}
				else {
					do {
						if (pol[y - 1][x] == '#'|| pol[y - 1][x] == 4 || pol[y - 1][x] == 5)break;
						pol[y][x] = ',';
						pol[y - 1][x] = pac;
						mtx.lock();

						setcur(y, x);
						SetColor(0, 0);
						cout << ',';
						setcur(y - 1, x);
						SetColor(6, 0);
						cout << pac;
						mtx.unlock();
						y--;
						x2 = x;
						y2 = y;
						Sleep(143);
					} while ((pol[y][x - 1] == '#' && pol[y][x + 1] == '#'));
				}
			}
			if (y + 1 <= 11)if (wsd == 's') {
				if (y == 9 && (x == 3 || x == 11)) {
					mtx.lock();
					pol[y][x] = ',';
					if (pol[y+1][x] == 4 || pol[y+1][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y + 1][x] = pac;
					setcur(y, x);
					SetColor(0, 0);
					cout << ',';
					setcur(y + 1, x);
					SetColor(6, 0);
					cout << pac;
					y++;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					y = 0;
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y, x);
					SetColor(6, 0);
					cout << pac;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y + 1, x);
					SetColor(6, 0);
					cout << pac;
					y++;
					mtx.unlock();
					Sleep(143);
				}
				else {
					do {
						if (pol[y + 1][x] == '#' || pol[y + 1][x] == 4 || pol[y + 1][x] == 5)break;
						pol[y][x] = ',';
						pol[y + 1][x] = pac;
						mtx.lock();
						setcur(y, x);
						SetColor(0, 0);
						cout << ',';
						setcur(y + 1, x);
						SetColor(6, 0);
						cout << pac;
						mtx.unlock();
						y++;
						x2 = x;
						y2 = y;
						Sleep(143);
					} while ((pol[y][x - 1] == '#' && pol[y][x + 1] == '#'));
				}
			}
			if (x - 1 >= 0)if (wsd == 'a') {
				if (x == 1 && (y == 3 || y == 7)) {
					mtx.lock();
					pol[y][x] = ',';
					if (pol[y][x-1] == 4 || pol[y][x-1] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x - 1] = pac;
					setcur(y, x);
					SetColor(0, 0);
					cout << ',';
					setcur(y, x - 1);
					SetColor(6, 0);
					cout << pac;
					x--;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					x = 14;
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y, x);
					SetColor(6, 0);
					cout << pac;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y, x - 1);
					SetColor(6, 0);
					cout << pac;
					x--;
					mtx.unlock();
					Sleep(143);
				}
				else {
					do {
						if (pol[y][x - 1] == '#' || pol[y][x-1] == 4 || pol[y][x-1] == 5)break;
						mtx.lock();
						pol[y][x] = ',';
						pol[y][x - 1] = pac;
						setcur(y, x);
						SetColor(0, 0);
						cout << ',';
						setcur(y, x - 1);
						SetColor(6, 0);
						cout << pac;
						mtx.unlock();
						x--;
						x2 = x;
						y2 = y;
						Sleep(143);
					} while ((pol[y + 1][x] == '#' && pol[y - 1][x] == '#'));
				}
			}
			if (x + 1 <= 14)if (wsd == 'd') {
				if (x == 13 && (y == 3 || y == 7)) {
					mtx.lock();
					pol[y][x] = ',';
					if (pol[y][x+1] == 4 || pol[y][x+1] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x + 1] = pac;
					setcur(y, x);
					SetColor(0, 0);
					cout << ',';
					setcur(y, x + 1);
					SetColor(6, 0);
					cout << pac;
					x++;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					x = 0;
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y, x);
					SetColor(6, 0);
					cout << pac;
					mtx.unlock();
					Sleep(143);
					mtx.lock();
					setcur(y, x);
					pol[y][x] = ',';
					SetColor(0, 0);
					cout << ',';
					if (pol[y][x] == 4 || pol[y][x] == 5) { system("cls"); fontsize(1, 250); cout << "You Lose"; while (!_kbhit()) {} SetColor(8, 0); exit(0); }
					pol[y][x] = pac;
					setcur(y, x + 1);
					SetColor(6, 0);
					cout << pac;
					x++;
					mtx.unlock();
					Sleep(143);
				}

				else {
					do {
						if (pol[y][x + 1] == '#' || pol[y][x + 1] == 4 || pol[y][x + 1] == 5)break;
						pol[y][x] = ',';
						pol[y][x + 1] = pac;
						mtx.lock();
						setcur(y, x);
						SetColor(0, 0);
						cout << ',';
						setcur(y, x + 1);
						SetColor(6, 0);
						cout << pac;
						mtx.unlock();
						x++;
						x2 = x;
						y2 = y;
						Sleep(143);
					} while ((pol[y + 1][x] == '#' && pol[y - 1][x] == '#') && (pol[y][x + 1] != 4 && pol[y][x + 1] != 5));
				}
			}

			for (int i = 0; i < 12; i++) {
				for (int j = 0; pol[i].size() > j; j++) {
					if (pol[i][j] == '.') { r = 1; i = 12; break; }
				}
			}
		}
		x2 = x;
		y2 = y;
		wsd = 0;
	}
	system("cls");
	fontsize(1, 250);
	SetColor(10,0);
	cout << "\You Win!";
	while (!_kbhit()) {}
	SetColor(8, 0);
}
void fontsize(int a, int b) {
	PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx = new CONSOLE_FONT_INFOEX();
	lpConsoleCurrentFontEx->cbSize = sizeof(CONSOLE_FONT_INFOEX);
	GetCurrentConsoleFontEx(out, 0, lpConsoleCurrentFontEx);
	lpConsoleCurrentFontEx->dwFontSize.X = a;
	lpConsoleCurrentFontEx->dwFontSize.Y = b;
	SetCurrentConsoleFontEx(out, 0, lpConsoleCurrentFontEx);
}



